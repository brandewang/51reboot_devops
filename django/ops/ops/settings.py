"""
Django settings for ops project.

Generated by 'django-admin startproject' using Django 1.11.28.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, os.path.join(BASE_DIR, "apps"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$8xd(bzgma+pw%++kw4%u@h8kxe7#1mybi*pi$5%siuf=!+ddy'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_filters',
    'idcs.apps.IdcsConfig',
    'users.apps.UsersConfig',
    'cabinet.apps.CabinetConfig',
    'manufacturer.apps.ManufacturerConfig',
    'servers.apps.ServersConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ops.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ops.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'devops',
        'USER': 'root',
        'PASSWORD': 'fruit@123',
        'HOST': '192.168.48.128',
        'PORT': 3306,
        'OPTIONS': {
            'init_command': 'SET default_storage_engine=INNODB',
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'


REST_FRAMEWORK = {
    'PAGE_SIZE': 10,
    'DEFAULT_PAGINATION_CLASS': 'ops.pagination.DefaultPagination',
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        # 'rest_framework.permissions.DjangoModelPermissions',
        'ops.permissions.Permissions',
    ),
}


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelanme)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s '
        },
        'simple': {
            'format': "%(asctime)s - %(name)s - %(levelname)s - %(message)s",
        },
        'default': {
            'format': "%(asctime)s %(name)s[%(lineno)s] [%(levelname)s]  %(message)s ",
            "datefmt": "%Y-%m-%d %H:%M:%S"
        },
    },
    'handlers': {
        "console": {
            "level": "DEBUG",
            "class": 'logging.StreamHandler',
            'formatter': 'default',
        },
        "root": {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/data/logs/django/ops/root.log',
            'formatter': 'default',
        },
        "django": {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/data/logs/django/ops/django.log',
            'formatter': 'default',
        },
        "server": {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/data/logs/django/ops/server.log',
            'formatter': 'default',
        },
        "db.backends": {
            'level': 'DEBUG',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': '/data/logs/django/ops/db.backends.log',
            'formatter': 'default',
            'when': 'D',
            'interval': 1,
        }
    },
    'loggers': {
        "ops": {
            "level": 'DEBUG',
            "handlers": ["console"],
            "propagate": False
        },
        "django": {
            "level": "DEBUG",
            "handlers": ['django'],
            "propagate": False
        },
        "django.server": {
            "level": "DEBUG",
            "handlers": ['server'],
            "propagate": False
        },
        "django.db.backends": {
            "level": "DEBUG",
            "handlers": ['db.backends'],
            "propagate": False
        }
    },
    'root': {
        'level': "DEBUG",
        "handlers": ['root']
    }
}
